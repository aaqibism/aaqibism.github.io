{"version":3,"sources":["components/landing_page/logo5.png","components/landing_page/Navbar.jsx","components/quiz/Autocomplete.jsx","components/quiz/Question.jsx","components/quiz/FoodTypes.jsx","components/quiz/SelectArray.jsx","components/results/CaveIn.jsx","components/results/PopUp.jsx","components/results/Restaurant.jsx","components/results/Results.jsx","components/results/Credentials.jsx","components/quiz/SelectQ.jsx","components/quiz/Quiz.jsx","components/landing_page/home.jsx","components/quiz/quizLanding.jsx","components/landing_page/landing.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","src","logo","alt","to","style","color","localStorage","getItem","Component","Autocomplete","props","onChange","e","suggestions","userInput","currentTarget","value","handleChange","setItem","filteredSuggestions","filter","suggestion","toLowerCase","indexOf","setState","activeSuggestion","showSuggestions","onClick","innerText","onKeyDown","state","keyCode","length","onKeyUp","suggestionsListComponent","this","map","index","key","question","name","type","placeholder","required","defaultProps","Question","List","React","FoodTypes","id","answers","SelectArray","CaveIn","forwardRef","ref","useState","isOpen","setIsOpen","Collapse","Card","fontSize","CardBody","rating","price","address","phone","href","url","target","rel","PopUp","anchorEl","setAnchorEl","handleClick","event","handleClose","open","Boolean","undefined","aria-describedby","variant","onMouseEnter","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Typography","padding","component","onMouseLeave","Restaurant","createJson","location","address1","address2","address3","city","zip_code","popClick","$","is","popButton","current","click","caveButton","displayCategories","categories","category","title","formatDetails","toggle","collapse","distance","image_url","createRef","bind","Results","data","total","businesses","ajaxError","processed","found","updated","uri","results","encodeURI","dis","parseInt","console","log","ajax","headers","Authorization","method","dataType","success","array","error","xhr","restaurants","msg","eMessage","restaurant","display_phone","is_closed","SelectQ","val","options","item","Quiz","setSelect","commute","casual","budget","food","loc","latitude","longitude","post","handleSubmit","alert","clear","navigator","geolocation","getCurrentPosition","position","lat","coords","lng","select","noLoc","Home","marginTop","QuizLanding","basename","process","path","Landing","exact","App","window","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"oKAAAA,EAAOC,QAAU,IAA0B,mC,iNCiC5BC,E,iLA3BX,OACE,6BACE,yBAAKC,UAAU,UACb,yBAAKA,UAAU,OAAOC,IAAKC,IAAMC,IAAI,SACrC,kBAAC,IAAD,CAAMC,GAAG,IAAIC,MAAO,CAAEC,MAAO,UAC3B,wBAAIN,UAAU,UAAd,eAKDO,aAAaC,QAAQ,QACpB,kBAAC,IAAD,CACEJ,GAAG,WACHC,MAAO,CAAEC,MAAO,SAChBN,UAAU,SAHZ,WAQA,S,GArBSS,a,gBCAfC,G,kBASJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAcRC,SAAW,SAAAC,GAAM,IACPC,EAAgB,EAAKH,MAArBG,YACFC,EAAYF,EAAEG,cAAcC,MAClC,EAAKN,MAAMO,aAAaL,GACxBN,aAAaY,QAAQ,OAAQJ,GAE7B,IAAMK,EAAsBN,EAAYO,QACtC,SAAAC,GAAU,OACRA,EAAWC,cAAcC,QAAQT,EAAUQ,gBAAkB,KAGjE,EAAKE,SAAS,CACZC,iBAAkB,EAClBN,sBACAO,iBAAiB,EACjBZ,UAAWF,EAAEG,cAAcC,SA9BZ,EAkCnBW,QAAU,SAAAf,GACR,EAAKY,SAAS,CACZC,iBAAkB,EAClBN,oBAAqB,GACrBO,iBAAiB,EACjBZ,UAAWF,EAAEG,cAAca,YAE7B,EAAKlB,MAAMO,aAAaL,GACxBN,aAAaY,QAAQ,OAAQN,EAAEG,cAAca,YA1C5B,EA8CnBC,UAAY,SAAAjB,GAAM,IAAD,EACmC,EAAKkB,MAA/CL,EADO,EACPA,iBAAkBN,EADX,EACWA,oBAG1B,GAAkB,KAAdP,EAAEmB,QACJ,EAAKP,SAAS,CACZC,iBAAkB,EAClBC,iBAAiB,EACjBZ,UAAWK,EAAoBM,UAI9B,GAAkB,KAAdb,EAAEmB,QAAgB,CACzB,GAAyB,IAArBN,EACF,OAGF,EAAKD,SAAS,CAAEC,iBAAkBA,EAAmB,SAGlD,GAAkB,KAAdb,EAAEmB,QAAgB,CACzB,GAAIN,EAAmB,IAAMN,EAAoBa,OAC/C,OAGF,EAAKR,SAAS,CAAEC,iBAAkBA,EAAmB,MAvEtC,EA2EnBQ,QAAU,SAAArB,GACRN,aAAaY,QAAQ,OAAQ,EAAKY,MAAMhB,YAzExC,EAAKgB,MAAQ,CAEXL,iBAAkB,EAElBN,oBAAqB,GAErBO,iBAAiB,EAEjBZ,UAAW,IAXI,E,sEA+ET,IAcJoB,EAZFvB,EAUEwB,KAVFxB,SACAgB,EASEQ,KATFR,QACAE,EAQEM,KARFN,UACAI,EAOEE,KAPFF,QALK,EAYHE,KANFL,MACEL,EAPG,EAOHA,iBACAN,EARG,EAQHA,oBACAO,EATG,EASHA,gBACAZ,EAVG,EAUHA,UAmCJ,OA7BIY,GAAmBZ,IAEnBoB,EADEf,EAAoBa,OAEpB,wBAAIjC,UAAU,eACXoB,EAAoBiB,KAAI,SAACf,EAAYgB,GACpC,IAAItC,EAOJ,OAJIsC,IAAUZ,IACZ1B,EAAY,qBAIZ,wBAAIA,UAAWA,EAAWuC,IAAKjB,EAAYM,QAASA,GACjDN,OAQT,yBAAKtB,UAAU,kBACb,qEAON,kBAAC,WAAD,KACE,yBAAKA,UAAU,SACb,wBAAIA,UAAU,YAAYoC,KAAKzB,MAAM6B,UACrC,2BACEC,KAAK,OACLC,KAAK,OACL1C,UAAU,SACVY,SAAUA,EACVkB,UAAWA,EACXI,QAASA,EACTjB,MAAOF,EACP4B,YAAY,qBACZC,UAAQ,IAEXT,Q,GApJkB1B,cAArBC,EAKGmC,aAAe,CACpB/B,YAAa,IAqJFJ,QCpIAoC,G,kBAtBb,WAAYnC,GAAQ,IAAD,8BACjB,4CAAMA,KACDoB,MAAQ,CACXgB,KAAM,IAHS,E,iFAOjBX,KAAKX,SAAS,CACZsB,KAAMX,KAAKzB,MAAMG,gB,+BAInB,OACE,6BACE,yBAAKd,UAAU,eACb,kBAAC,EAAD,CAAcwC,SAAUJ,KAAKzB,MAAM6B,SAAU1B,YAAasB,KAAKL,MAAMgB,KAAM7B,aAAckB,KAAKzB,MAAMO,qB,GAhBvF8B,IAAMvC,YCyFdwC,EA7FG,CAChB,CACEC,GAAI,EACJV,SAAU,2CACVW,QAAS,CACP,SACA,UACA,WACA,UACA,YACA,aACA,WACA,YACA,UACA,YACA,SACA,UACA,UACA,QACA,YACA,gBACA,UACA,eACA,QACA,QACA,SACA,YACA,YACA,YACA,WACA,eACA,SACA,aACA,cACA,SACA,QACA,QACA,WACA,YACA,gBACA,SACA,QACA,UACA,WACA,SACA,SACA,SACA,UACA,QACA,UACA,iBACA,YACA,gBACA,UACA,iBACA,WACA,WACA,cACA,aACA,UACA,YACA,aACA,SACA,YACA,WACA,UACA,OACA,QACA,aACA,eACA,YACA,UACA,cACA,YACA,OACA,WACA,UACA,cACA,YACA,OACA,UACA,UACA,WACA,QACA,aACA,aACA,QACA,MACA,WC/CSC,EAzCK,CAClB,CACEF,GAAI,EACJT,KAAM,UACND,SAAU,sCACVW,QAAS,CACP,SACA,UACA,WACA,WACA,WACA,WACA,oBAGJ,CACED,GAAI,EACJT,KAAM,SACND,SAAU,wCACVW,QAAS,CAAC,SAAU,WAEtB,CACED,GAAI,EACJT,KAAM,SACND,SAAU,uBACVW,QAAS,CAAC,MAAO,MAAO,OAAQ,uBAElC,CACED,GAAI,EACJT,KAAM,OACND,SAAU,YACVW,QAAS,CAAC,MAAO,OAEnB,CACED,GAAI,EACJT,KAAM,OACND,SAAU,iCACVW,QAAS,CAAC,SAAU,YAAa,oBAAqB,UAAW,gB,wCCNtDE,EA3BAL,IAAMM,YAAW,SAAC3C,EAAO4C,GAAS,IAAD,EAClBC,oBAAS,GADS,mBACvCC,EADuC,KAC/BC,EAD+B,KAK9C,OACE,6BACE,yBAAK1D,UAAU,QACb,4BAAQkD,GAAG,OAAOK,IAAKA,EAAK3B,QALnB,kBAAM8B,GAAWD,KAK1B,YAIF,kBAACE,EAAA,EAAD,CAAUF,OAAQA,GAChB,kBAACG,EAAA,EAAD,CAAMvD,MAAO,CAACwD,SAAU,UACtB,kBAACC,EAAA,EAAD,KACA,2BAAG,sCAAH,IAAmBnD,EAAMoD,QACzB,2BAAG,qCAAH,IAAkBpD,EAAMqD,OACxB,2BAAG,uCAAH,IAAoBrD,EAAMsD,QAA1B,KACA,2BAAG,qCAAH,IAAkBtD,EAAMuD,OACxB,uBAAGC,KAAMxD,EAAMyD,IAAKC,OAAO,SAASC,IAAI,uBAAsB,gD,gBC6BzDC,EA/CDvB,IAAMM,YAAW,SAAC3C,EAAO4C,GAAS,IAAD,EACbP,IAAMQ,SAAS,MADF,mBACtCgB,EADsC,KAC5BC,EAD4B,KAGvCC,EAAc,SAAAC,GAClBF,EAAYE,EAAM3D,gBAGd4D,EAAc,WAClBH,EAAY,OAGRI,EAAOC,QAAQN,GACftB,EAAK2B,EAAOlE,EAAMuC,QAAK6B,EAE7B,OACE,6BACE,yBAAK/E,UAAU,SACb,4BAAQkD,GAAG,QAAQ8B,mBAAkB9B,EAAIK,IAAKA,EAAK0B,QAAQ,YAAYC,aAAcR,EAAa9C,QAAS8C,GAA3G,YAIF,kBAACS,EAAA,EAAD,CACEjC,GAAIA,EACJ2B,KAAMA,EACNL,SAAUA,EACVY,QAASR,EACTS,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,WAGd,kBAACE,EAAA,EAAD,CAAYpF,MAAO,CAACqF,QAAS,MAAO7B,SAAU,SAAU8B,UAAW,KAAMC,aAAchB,GACrF,2BAAG,sCAAH,IAAmBjE,EAAMoD,QACzB,2BAAG,qCAAH,IAAkBpD,EAAMqD,OACxB,2BAAG,uCAAH,IAAoBrD,EAAMsD,QAA1B,KACA,2BAAG,qCAAH,IAAkBtD,EAAMuD,OACxB,uBAAGC,KAAMxD,EAAMyD,IAAKC,OAAO,SAASC,IAAI,uBAAsB,+C,iBCyEzDuB,E,YA/Gb,WAAYlF,GAAQ,IAAD,8BACjB,4CAAMA,KAqBRmF,WAAa,SAACC,GACZ,IAAI9B,EAAU,GAad,OAZI8B,EAASC,WACX/B,GAAW8B,EAASC,UAClBD,EAASE,WACXhC,GAAW,IAAM8B,EAASE,UACxBF,EAASG,WACXjC,GAAW,IAAM8B,EAASG,UACxBH,EAASI,OACXlC,GAAW,KAAO8B,EAASI,MACzBJ,EAAShE,QACXkC,GAAW,KAAO8B,EAAShE,OACzBgE,EAASK,WACXnC,GAAW,IAAM8B,EAASK,UACrBnC,GApCU,EAwDnBoC,SAAW,WACLC,IAAE,UAAUC,GAAG,YAAa,EAAKC,UAAUC,QAAQC,QAClD,EAAKC,WAAWF,QAAQC,SA1DZ,EA6DnBE,kBAAoB,WAQlB,OANE,yBAAK5G,UAAU,cACZ,EAAK+B,MAAM8E,WAAWxE,KAAI,SAAAyE,GAAQ,OACjC,uBAAG9G,UAAU,YAAY8G,EAASC,YAjEvB,EAwEnBC,cAAgB,WACd,OAAI,EAAKjF,MAAM0B,OACN,OAEA,UA5EQ,EAgFnBwD,OAAS,kBAAM,EAAKxF,SAAS,CAAEyF,UAAW,EAAKnF,MAAMmF,YA9EnD,EAAKnF,MAAQ,CACXmB,GAAI,GACJa,OAAQ,GACRG,MAAO,GACPT,QAAQ,EACRO,MAAO,GACP6C,WAAY,GACZpE,KAAM,GACN2B,IAAK,GACL+C,SAAU,GACVC,UAAW,GACXrB,SAAU,GACV9B,QAAS,GACTiD,UAAU,GAEZ,EAAKV,UAAYxD,IAAMqE,YACvB,EAAKV,WAAa3D,IAAMqE,YACxB,EAAKhB,SAAW,EAAKA,SAASiB,KAAd,gBAnBC,E,iFAwCjBlF,KAAKX,SAAS,CACZyB,GAAId,KAAKzB,MAAMuC,GACfa,OAAQ3B,KAAKzB,MAAMoD,OACnBG,MAAO9B,KAAKzB,MAAMuD,MAClBT,OAAQrB,KAAKzB,MAAM8C,OACnBO,MAAO5B,KAAKzB,MAAMqD,MAClB6C,WAAYzE,KAAKzB,MAAMkG,WACvBpE,KAAML,KAAKzB,MAAM8B,KACjB2B,IAAKhC,KAAKzB,MAAMyD,IAChB+C,SAAU/E,KAAKzB,MAAMwG,SACrBC,UAAWhF,KAAKzB,MAAMyG,UACtBrB,SAAU3D,KAAKzB,MAAMoF,SACrB9B,QAAS7B,KAAK0D,WAAW1D,KAAKzB,MAAMoF,c,+BA+BtC,OACE,yBAAK/F,UAAU,uBACb,wBAAIA,UAAU,mBAAmBoC,KAAKL,MAAMU,MAC1C,yBAAKxC,IAAKmC,KAAKL,MAAMqF,UAAWpH,UAAU,gBAAgBG,IAAI,kBAAkByB,QAASQ,KAAKiE,WAC/FjE,KAAKwE,oBACN,kBAAC,EAAD,CACErD,IAAKnB,KAAKuE,WACV5C,OAAQ3B,KAAKL,MAAMgC,OACnBC,MAAO5B,KAAKL,MAAMiC,MAClBC,QAAS7B,KAAKL,MAAMkC,QACpBC,MAAO9B,KAAKL,MAAMmC,MAClBE,IAAKhC,KAAKL,MAAMqC,MAElB,kBAAC,EAAD,CACEpE,UAAU,eACVuD,IAAKnB,KAAKoE,UACVtD,GAAId,KAAKL,MAAMmB,GACfa,OAAQ3B,KAAKL,MAAMgC,OACnBC,MAAO5B,KAAKL,MAAMiC,MAClBC,QAAS7B,KAAKL,MAAMkC,QACpBC,MAAO9B,KAAKL,MAAMmC,MAClBE,IAAKhC,KAAKL,MAAMqC,W,GAzGD3D,aC+KV8G,E,YAxKb,WAAY5G,GAAQ,IAAD,8BACjB,4CAAMA,KACDoB,MAAQ,CACXyF,KAAM,CACJC,MAAO,EACPC,WAAY,GACZC,WAAW,EACXC,WAAW,EACXC,OAAO,EACPC,SAAS,IATI,E,iFAejB,IAEIC,EAwCAC,EAtCJ,GAAwC,oBAApCzH,aAAaC,QAAQ,WACvBuH,EACE,iGACAE,UAAU1H,aAAaC,QAAQ,aAC5B,CACL,IAAI0H,EAAkD,KAA5CC,SAAS5H,aAAaC,QAAQ,YACpC0H,EAAM,MAAOA,EAAM,KACvBH,EACE,iGACAG,EACA,SACAD,UAAU1H,aAAaC,QAAQ,SAII,WAAnCD,aAAaC,QAAQ,UAAwBuH,GAAOE,UAAU,SAC7DF,GAAOE,UAAU,qBAGlB1H,aAAaC,QAAQ,YACvBuH,GACE,aACAE,UAAU1H,aAAaC,QAAQ,aAC/B,cACAyH,UAAU1H,aAAaC,QAAQ,cAEjCuH,GAAO,aAAeE,UAAU1H,aAAaC,QAAQ,QAGhB,QAAnCD,aAAaC,QAAQ,UAAqBuH,GAAO,aACT,QAAnCxH,aAAaC,QAAQ,UAAqBuH,GAAO,gBACjDxH,aAAaC,QAAQ,UAAsBuH,GAAO,kBAItB,QAAjCxH,aAAaC,QAAQ,UAAmBuH,GAAO,kBAEnDK,QAAQC,IAAIN,GAEZzB,IAAEgC,KAAK,CACLlE,IAAK2D,EACLQ,QAAS,CACPC,cCzEF,2ID2EAC,OAAQ,MACRC,SAAU,OACVC,QAAS,SAASC,GAChBZ,EAAUY,EACVxG,KAAKX,SAAS,CACZ+F,KAAMQ,EACNP,MAAOO,EAAQ/F,SAEZG,KAAKL,MAAMyF,KAAKE,WAAWzF,QAAWG,KAAKL,MAAM+F,SACpD1F,KAAKX,SAAS,CACZmG,WAAW,EACXC,OAAO,EACPC,SAAS,KAGbR,KAAKlF,MACPyG,MAAO,SAASC,GACd1G,KAAKX,SAAS,CACZkG,WAAW,KAEbL,KAAKlF,U,4BAKT,OAAO,2C,+BAIP,IAEI2G,EAFEC,EAAM,oDAGRC,EACF,8BACE,wBAAIjJ,UAAU,qBAAqBgJ,IA0CvC,OAvCI5G,KAAKL,MAAM4F,UACboB,EACE,8BACE,wBAAI/I,UAAU,qBAVN,yCAcJoC,KAAKL,MAAMyF,KAAKE,WAAWzF,QAQnC8G,EAAc3G,KAAKL,MAAMyF,KAAKE,WAAWrF,KAAI,SAAA6G,GAAU,OACrD,kBAAC,EAAD,CACE3G,IAAK2G,EAAWhG,GAChBA,GAAIgG,EAAWhG,GACfa,OAAQmF,EAAWnF,OACnBG,MAAOgF,EAAWC,cAClB1F,QAASyF,EAAWE,UACpBpF,MAAOkF,EAAWlF,MAClB6C,WAAYqC,EAAWrC,WACvBpE,KAAMyG,EAAWzG,KACjB2B,IAAK8E,EAAW9E,IAChB+C,SAAU+B,EAAW/B,SACrBC,UAAW8B,EAAW9B,UACtBrB,SAAUmD,EAAWnD,cAGrB3D,KAAKL,MAAM6F,YAAcxF,KAAKL,MAAM8F,QACtCoB,EACE,8BACE,wBAAIjJ,UAAU,qBAAqBgJ,MA1BzCD,EACE,8BACE,wBAAI/I,UAAU,mBAAd,eA8BJ,6BACE,wBAAIA,UAAU,gBAAd,6BAYM,6BACA,yBAAKA,UAAU,QACZ+I,EACA3G,KAAKL,MAAM6F,YAAcxF,KAAKL,MAAM8F,MAAQoB,EAAW,IAMhE,kC,GAnKcxI,aEkBP4I,E,YA3Bb,WAAY1I,GAAQ,IAAD,8BACjB,4CAAMA,KAKRO,aAAe,SAACL,GACd,EAAKF,MAAMO,aAAaL,GADJ,MAEIA,EAAEwD,OAAZpD,GAFM,EAEZwB,KAFY,EAENxB,OACd,EAAKQ,SAAS,CAAE6H,IAAKrI,KAPrB,EAAKc,MAAQ,CACXuH,IAAK,IAHU,E,sEAajB,IAAMC,EAAUnH,KAAKzB,MAAM4I,QAAQlH,KAAI,SAAAmH,GAAI,OACzC,4BAAQvI,MAAOuI,GAAOA,MAExB,OACE,yBAAKxJ,UAAU,SACb,wBAAIA,UAAU,YAAYoC,KAAKzB,MAAM6B,UACrC,4BAAQxC,UAAU,SAASyC,KAAML,KAAKzB,MAAM8B,KAAMxB,MAAOmB,KAAKL,MAAMuH,IAAK1I,SAAUwB,KAAKlB,aAAc0B,UAAQ,GAC3G2G,Q,GArBW9I,aCgJPgJ,E,YAxIb,WAAY9I,GAAQ,IAAD,8BACjB,4CAAMA,KAiBR+I,UAAY,WACVnJ,aAAaY,QAAQ,UAAW,EAAKY,MAAM4H,SAC3CpJ,aAAaY,QAAQ,SAAU,EAAKY,MAAM6H,QAC1CrJ,aAAaY,QAAQ,SAAU,EAAKY,MAAM8H,QAC1CtJ,aAAaY,QAAQ,OAAQ,EAAKY,MAAM8C,MACxCtE,aAAaY,QAAQ,OAAQ,EAAKY,MAAM8C,OArBxC,EAAK9C,MAAQ,CACXgE,UAAU,EACV+D,KAAM,GACNC,IAAK,GACLC,SAAU,GACVC,UAAW,GACXN,QAAS,SACTC,OAAQ,SACRC,OAAQ,MACRhF,KAAM,MACNqF,KAAM,UAER,EAAKhJ,aAAe,EAAKA,aAAaoG,KAAlB,gBACpB,EAAK6C,aAAe,EAAKA,aAAa7C,KAAlB,gBAfH,E,0EA0BN3C,GAAQ,IAAD,EACMA,EAAMN,OAAtB5B,EADU,EACVA,KAAMxB,EADI,EACJA,MACdmB,KAAKX,SAAL,eAAiBgB,EAAOxB,IACxBV,aAAaY,QAAQsB,EAAMxB,K,mCAGhB0D,GACX,KACGvC,KAAKL,MAAMiI,UAAY5H,KAAKL,MAAMkI,WAAa7H,KAAKL,MAAM+H,MAC1D1H,KAAKL,MAAMgI,KAAO3H,KAAKL,MAAM+H,MAI9B,OADAM,MAAM,6BACC,I,0CAIU,IAAD,OAClB7J,aAAa8J,QACbjI,KAAKsH,YACLY,UAAUC,YAAYC,oBACpB,SAAAC,GACE,IAAMC,EAAMD,EAASE,OAAOX,SACtBY,EAAMH,EAASE,OAAOV,UAC5B,EAAKxI,SAAS,CAAEsE,UAAU,EAAMiE,SAAUU,EAAKT,UAAWW,IAC1DrK,aAAaY,QAAQ,WAAYuJ,GACjCnK,aAAaY,QAAQ,YAAayJ,MAEpC,SAAA/B,GACET,QAAQC,IAAI,0B,+BAIR,IAAD,OAKDyB,EAAO7G,EAAUZ,KAAI,SAAAmH,GAAI,OAC7B,kBAAC,EAAD,CACEjH,IAAKiH,EAAKtG,GACVV,SAAUgH,EAAKhH,SACf1B,YAAa0I,EAAKrG,QAClBjC,aAAc,EAAKA,kBAGjB2J,EAASzH,EAAYf,KAAI,SAAAmH,GAAI,OACjC,kBAAC,EAAD,CACEjH,IAAKiH,EAAKtG,GACVT,KAAM+G,EAAK/G,KACXD,SAAUgH,EAAKhH,SACf+G,QAASC,EAAKrG,QACdjC,aAAc,EAAKA,kBAIjB4J,EACJ,yBAAK9K,UAAU,SACb,wBAAIA,UAAU,YAAd,6BACA,2BACEyC,KAAK,MACLC,KAAK,OACLC,YAAY,cACZ/B,SAAUwB,KAAKlB,aACf0B,UAAQ,KAId,OACE,6BACE,wBAAI5C,UAAU,aAAd,mBACA,yBAAKA,UAAU,OACb,4BACE,gCAtCN,6DAwCI,2BAtCJ,+KAwCG8J,EACA1H,KAAKL,MAAMgE,SAAW,GAAK+E,EAC3BD,EACD,yBAAK7K,UAAU,UAEVoC,KAAKL,MAAMiI,UAAY5H,KAAKL,MAAMkI,WAAa7H,KAAKL,MAAM+H,MAC1D1H,KAAKL,MAAMgI,KAAO3H,KAAKL,MAAM+H,KAE9B,kBAAC,IAAD,CAAM1J,GAAG,YACT,4BACEsC,KAAK,SACL1C,UAAU,aACV4B,QAASQ,KAAK+H,cAHhB,WAQA,kBAAC,IAAD,CAAM/J,GAAG,SACX,4BACEsC,KAAK,SACL1C,UAAU,aACV4B,QAASQ,KAAK+H,cAHhB,iB,GA1HS1J,aCyBJsK,E,YAnBb,WAAYpK,GAAQ,qEACZA,I,sEAKN,OACE,6BACE,yBAAKX,UAAU,OACb,wBAAIA,UAAU,SAAd,qBACA,uBAAGA,UAAU,kBALjB,oLAMI,kBAAC,IAAD,CAAMI,GAAG,SAAQ,4BAAQJ,UAAU,UAAlB,qBACjB,uBAAGK,MAAO,CAAC2K,UAAW,KAAM1K,MAAO,UAAnC,8C,GAbSG,a,QCqBJwK,E,iLAnBX,OACE,6BACE,kBAAC,IAAD,CAAQC,SAAUC,IAChB,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,SACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAAC,EAAD,e,GAXU3K,aC0BX4K,E,iLAvBX,OACE,6BACE,kBAAC,IAAD,CAAQH,SAAUC,IAChB,kBAAC,EAAD,MACA,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOG,OAAK,EAACF,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,SACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAAC,EAAD,e,GAfM3K,aCHP8K,EARH,WACV,OACE,6BACE,kBAAC,EAAD,QCKczG,QACW,cAA7B0G,OAAOzF,SAAS0F,UAEe,UAA7BD,OAAOzF,SAAS0F,UAEhBD,OAAOzF,SAAS0F,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBxB,WACrBA,UAAUyB,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAvD,GACLT,QAAQS,MAAMA,EAAMwD,c","file":"static/js/main.867c645e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo5.bfb4a450.png\";","import React, { Component } from \"react\";\r\nimport \"./Home.css\";\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport logo from \"./logo5.png\";\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"header\">\r\n          <img className=\"logo\" src={logo} alt=\"Logo\" />\r\n          <Link to=\"/\" style={{ color: \"white\" }}>\r\n            <h1 className=\"slogan\">Date Night</h1>\r\n          </Link>\r\n          {/* <Link to=\"/quiz\" style={{ color: \"white\" }} className=\"links\">\r\n            Quiz\r\n          </Link> */}\r\n          {localStorage.getItem(\"food\") ? (\r\n            <Link\r\n              to=\"/results\"\r\n              style={{ color: \"white\" }}\r\n              className=\"links\"\r\n            >\r\n              Results\r\n            </Link>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Autocomplete.css\";\r\n\r\nclass Autocomplete extends Component {\r\n  static propTypes = {\r\n    suggestions: PropTypes.instanceOf(Array)\r\n  };\r\n\r\n  static defaultProps = {\r\n    suggestions: []\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      // The active selection's index\r\n      activeSuggestion: 0,\r\n      // The suggestions that match the user's input\r\n      filteredSuggestions: [],\r\n      // Whether or not the suggestion list is shown\r\n      showSuggestions: false,\r\n      // What the user has entered\r\n      userInput: \"\"\r\n    };\r\n  }\r\n\r\n  onChange = e => {\r\n    const { suggestions } = this.props;\r\n    const userInput = e.currentTarget.value;\r\n    this.props.handleChange(e);\r\n    localStorage.setItem(\"food\", userInput);\r\n    // Filter our suggestions that don't contain the user's input\r\n    const filteredSuggestions = suggestions.filter(\r\n      suggestion =>\r\n        suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1\r\n    );\r\n\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions,\r\n      showSuggestions: true,\r\n      userInput: e.currentTarget.value\r\n    });\r\n  };\r\n\r\n  onClick = e => {\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions: [],\r\n      showSuggestions: false,\r\n      userInput: e.currentTarget.innerText\r\n    });\r\n    this.props.handleChange(e);\r\n    localStorage.setItem(\"food\", e.currentTarget.innerText);\r\n\r\n  };\r\n\r\n  onKeyDown = e => {\r\n    const { activeSuggestion, filteredSuggestions } = this.state;\r\n\r\n    // User pressed the enter key\r\n    if (e.keyCode === 13) {\r\n      this.setState({\r\n        activeSuggestion: 0,\r\n        showSuggestions: false,\r\n        userInput: filteredSuggestions[activeSuggestion]\r\n      });\r\n    }\r\n    // User pressed the up arrow\r\n    else if (e.keyCode === 38) {\r\n      if (activeSuggestion === 0) {\r\n        return;\r\n      }\r\n\r\n      this.setState({ activeSuggestion: activeSuggestion - 1 });\r\n    }\r\n    // User pressed the down arrow\r\n    else if (e.keyCode === 40) {\r\n      if (activeSuggestion - 1 === filteredSuggestions.length) {\r\n        return;\r\n      }\r\n\r\n      this.setState({ activeSuggestion: activeSuggestion + 1 });\r\n    }\r\n  };\r\n\r\n  onKeyUp = e => {\r\n    localStorage.setItem(\"food\", this.state.userInput);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      onChange,\r\n      onClick,\r\n      onKeyDown,\r\n      onKeyUp,\r\n      state: {\r\n        activeSuggestion,\r\n        filteredSuggestions,\r\n        showSuggestions,\r\n        userInput\r\n      }\r\n    } = this;\r\n\r\n    let suggestionsListComponent;\r\n\r\n    if (showSuggestions && userInput) {\r\n      if (filteredSuggestions.length) {\r\n        suggestionsListComponent = (\r\n          <ul className=\"suggestions\">\r\n            {filteredSuggestions.map((suggestion, index) => {\r\n              let className;\r\n\r\n              // Flag the active suggestion with a class\r\n              if (index === activeSuggestion) {\r\n                className = \"suggestion-active\";\r\n              }\r\n\r\n              return (\r\n                <li className={className} key={suggestion} onClick={onClick}>\r\n                  {suggestion}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        );\r\n      } else {\r\n        suggestionsListComponent = (\r\n          <div className=\"no-suggestions\">\r\n            <em>No suggestions, you're on your own!</em>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"input\">\r\n          <h1 className=\"question\">{this.props.question}</h1>\r\n          <input\r\n            name=\"food\"\r\n            type=\"text\"\r\n            className=\"answer\"\r\n            onChange={onChange}\r\n            onKeyDown={onKeyDown}\r\n            onKeyUp={onKeyUp}\r\n            value={userInput}\r\n            placeholder=\"Enter type of food\"\r\n            required\r\n          />\r\n        {suggestionsListComponent}\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Autocomplete;\r\n","import React, { Component } from \"react\";\r\nimport Autocomplete from \"./Autocomplete\";\r\nimport \"./Quiz.css\";\r\n\r\nclass Question extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      List: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      List: this.props.suggestions\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"buttonGroup\">\r\n          <Autocomplete question={this.props.question} suggestions={this.state.List} handleChange={this.props.handleChange}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Question;\r\n","const FoodTypes = [\r\n  {\r\n    id: 0,\r\n    question: \"What type of food would you like to eat?\",\r\n    answers: [\r\n      \"Afghan\",\r\n      \"African\",\r\n      \"American\",\r\n      \"Arabian\",\r\n      \"Argentine\",\r\n      \"Australian\",\r\n      \"Barbeque\",\r\n      \"Brazilian\",\r\n      \"Bistros\",\r\n      \"Breakfast\",\r\n      \"Brunch\",\r\n      \"British\",\r\n      \"Buffets\",\r\n      \"Cajun\",\r\n      \"Carribean\",\r\n      \"Chicken Wings\",\r\n      \"Chinese\",\r\n      \"Comfort Food\",\r\n      \"Cuban\",\r\n      \"Curry\",\r\n      \"Danish\",\r\n      \"Dumplings\",\r\n      \"Ethiopian\",\r\n      \"Fast Food\",\r\n      \"Filipino\",\r\n      \"Fish & Chips\",\r\n      \"French\",\r\n      \"Gastropubs\",\r\n      \"Gluten-Free\",\r\n      \"German\",\r\n      \"Greek\",\r\n      \"Halal\",\r\n      \"Hawaiian\",\r\n      \"Hungarian\",\r\n      \"International\",\r\n      \"Indian\",\r\n      \"Irish\",\r\n      \"Italian\",\r\n      \"Japanese\",\r\n      \"Jewish\",\r\n      \"Korean\",\r\n      \"Kosher\",\r\n      \"Kurdish\",\r\n      \"Kebab\",\r\n      \"Laotian\",\r\n      \"Latin American\",\r\n      \"Malaysian\",\r\n      \"Mediterranean\",\r\n      \"Mexican\",\r\n      \"Middle Eastern\",\r\n      \"Lebanese\",\r\n      \"Moroccan\",\r\n      \"New Zealand\",\r\n      \"Nicaraguan\",\r\n      \"Noodles\",\r\n      \"Pakistani\",\r\n      \"Polynesian\",\r\n      \"Polish\",\r\n      \"Portugese\",\r\n      \"Pub Food\",\r\n      \"Russian\",\r\n      \"Rice\",\r\n      \"Salad\",\r\n      \"Sandwiches\",\r\n      \"Scandinavian\",\r\n      \"Schnitzel\",\r\n      \"Seafood\",\r\n      \"Singaporean\",\r\n      \"Soul Food\",\r\n      \"Soup\",\r\n      \"Southern\",\r\n      \"Spanish\",\r\n      \"Steakhouses\",\r\n      \"Taiwanese\",\r\n      \"Thai\",\r\n      \"Tex-Mex\",\r\n      \"Turkish\",\r\n      \"Ukranian\",\r\n      \"Vegan\",\r\n      \"Vegetarian\",\r\n      \"Vietnamese\",\r\n      \"Ramen\",\r\n      \"Wok\",\r\n      \"Wraps\"\r\n    ]\r\n  }\r\n];\r\n\r\nexport default FoodTypes;","const SelectArray = [\r\n  {\r\n    id: 0,\r\n    name: \"commute\",\r\n    question: \"How far are you willing to commute?\",\r\n    answers: [\r\n      \"1 mile\",\r\n      \"5 miles\",\r\n      \"10 miles\",\r\n      \"15 miles\",\r\n      \"20 miles\",\r\n      \"25 miles\",\r\n      \"Delivery Please\"\r\n    ]\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"casual\",\r\n    question: \"Is this casual or formal/celebratory?\",\r\n    answers: [\"Casual\", \"Formal\"]\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"budget\",\r\n    question: \"What is your budget?\",\r\n    answers: [\"$20\", \"$50\", \"$100\", \"My Entire Paycheck\"]\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"open\",\r\n    question: \"Open Now?\",\r\n    answers: [\"yes\", \"no\"]\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"post\",\r\n    question: \"What's happening after dinner?\",\r\n    answers: [\"Drinks\", \"Ice Cream\", \"Netflix and Chill\", \"Nothing\", \"Stargazing\"]\r\n  }\r\n];\r\n\r\nexport default SelectArray;","import React, { useState } from 'react';\r\nimport { Collapse, CardBody, Card } from 'reactstrap';\r\nimport \"./Results.css\";\r\n\r\nconst CaveIn = React.forwardRef((props, ref) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"cave\">\r\n        <button id=\"cave\" ref={ref} onClick={toggle} >\r\n          Details\r\n        </button>\r\n      </div>\r\n      <Collapse isOpen={isOpen}>\r\n        <Card style={{fontSize: \"1.2em\"}}>\r\n          <CardBody>\r\n          <p><i>Rating:</i> {props.rating}</p>\r\n          <p><i>Price:</i> {props.price}</p>\r\n          <p><i>Address:</i> {props.address} </p>\r\n          <p><i>Phone:</i> {props.phone}</p>\r\n          <a href={props.url} target=\"_blank\" rel=\"noopener noreferrer\"><i>Yelp Page</i></a>\r\n          </CardBody>\r\n        </Card>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n})\r\n\r\nexport default CaveIn;","import React, { useState } from 'react';\r\nimport \"./Results.css\";\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst PopUp = React.forwardRef((props, ref) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? props.id : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"popup\">\r\n        <button id=\"popup\" aria-describedby={id} ref={ref} variant=\"contained\" onMouseEnter={handleClick} onClick={handleClick}>\r\n          Details\r\n        </button>\r\n      </div>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n      >\r\n        <Typography style={{padding: \"1em\", fontSize: \"1.2em\"}} component={'h1'} onMouseLeave={handleClose}>\r\n          <p><i>Rating:</i> {props.rating}</p>\r\n          <p><i>Price:</i> {props.price}</p>\r\n          <p><i>Address:</i> {props.address} </p>\r\n          <p><i>Phone:</i> {props.phone}</p>\r\n          <a href={props.url} target=\"_blank\" rel=\"noopener noreferrer\"><i>Yelp Page</i></a>\r\n        </Typography>\r\n      </Popover>\r\n    </div>\r\n  );\r\n})\r\n\r\nexport default PopUp;","import React, { Component } from \"react\";\r\nimport \"./Results.css\";\r\nimport CaveIn from './CaveIn'\r\nimport PopUp from './PopUp'\r\nimport $ from 'jquery'\r\n\r\nclass Restaurant extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: \"\",\r\n      rating: \"\",\r\n      phone: \"\",\r\n      isOpen: true,\r\n      price: \"\",\r\n      categories: [],\r\n      name: \"\",\r\n      url: \"\",\r\n      distance: \"\",\r\n      image_url: \"\",\r\n      location: {},\r\n      address: \"\",\r\n      collapse: false\r\n    };\r\n    this.popButton = React.createRef();\r\n    this.caveButton = React.createRef();\r\n    this.popClick = this.popClick.bind(this);\r\n  }\r\n\r\n  createJson = (location) => {\r\n    let address = \"\";\r\n    if (location.address1) \r\n      address += location.address1;\r\n    if (location.address2) \r\n      address += \" \" + location.address2;\r\n    if (location.address3) \r\n      address += \" \" + location.address3;\r\n    if (location.city) \r\n      address += \", \" + location.city;\r\n    if (location.state)\r\n      address += \", \" + location.state;\r\n    if (location.zip_code)\r\n      address += \" \" + location.zip_code;\r\n    return address;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      id: this.props.id,\r\n      rating: this.props.rating,\r\n      phone: this.props.phone,\r\n      isOpen: this.props.isOpen,\r\n      price: this.props.price,\r\n      categories: this.props.categories,\r\n      name: this.props.name,\r\n      url: this.props.url,\r\n      distance: this.props.distance,\r\n      image_url: this.props.image_url,\r\n      location: this.props.location,\r\n      address: this.createJson(this.props.location)\r\n    });\r\n  }\r\n\r\n  popClick = () => {\r\n    if ($(\"#popup\").is(':visible')) this.popButton.current.click();\r\n    else this.caveButton.current.click();\r\n  }\r\n\r\n  displayCategories = () => {\r\n    const categories = (\r\n      <div className=\"list-group\">\r\n        {this.state.categories.map(category => (\r\n          <p className=\"category\">{category.title}</p>\r\n        ))}\r\n      </div>\r\n    );\r\n    return categories;\r\n  };\r\n\r\n  formatDetails = () => {\r\n    if (this.state.isOpen) {\r\n      return \"Open\";\r\n    } else {\r\n      return \"Closed\";\r\n    }\r\n  };\r\n  \r\n  toggle = () => this.setState({ collapse: !this.state.collapse});\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"restaurantContainer\">\r\n        <h3 className=\"restaurantTitle\">{this.state.name}</h3>\r\n          <img src={this.state.image_url} className=\"restaurantIMG\" alt=\"Restaurant Logo\" onClick={this.popClick}/>\r\n        {this.displayCategories()}\r\n        <CaveIn \r\n          ref={this.caveButton}\r\n          rating={this.state.rating}\r\n          price={this.state.price}\r\n          address={this.state.address}\r\n          phone={this.state.phone}\r\n          url={this.state.url}\r\n        />\r\n        <PopUp\r\n          className=\"uncontrolled\"\r\n          ref={this.popButton}\r\n          id={this.state.id}\r\n          rating={this.state.rating}\r\n          price={this.state.price}\r\n          address={this.state.address}\r\n          phone={this.state.phone}\r\n          url={this.state.url}\r\n        />\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Restaurant;","import React, { Component } from \"react\";\r\nimport Restaurant from \"./Restaurant.jsx\";\r\nimport \"./Results.css\";\r\nimport $ from \"jquery\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport API_KEY from \"./Credentials\";\r\n\r\nclass Results extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: {\r\n        total: 0,\r\n        businesses: [],\r\n        ajaxError: false,\r\n        processed: false,\r\n        found: true,\r\n        updated: false\r\n      }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const key = API_KEY;\r\n\r\n    let uri;\r\n    //Check radius\r\n    if (localStorage.getItem(\"commute\") === \"Delivery Please\") {\r\n      uri =\r\n        \"https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/transactions/delivery/search?term=\" +\r\n        encodeURI(localStorage.getItem(\"food\"));\r\n    } else {\r\n      let dis = parseInt(localStorage.getItem(\"commute\")) * 1609;\r\n      if (dis > 40000) dis = 40000\r\n      uri =\r\n        \"https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?limit=24&radius=\" +\r\n        dis +\r\n        \"&term=\" +\r\n        encodeURI(localStorage.getItem(\"food\"));\r\n    }\r\n\r\n    //Check formal or casual\r\n    if (localStorage.getItem(\"casual\") === \"Casual\") uri += encodeURI(\" food\");\r\n    else uri += encodeURI(\" fancy restaurant\");\r\n\r\n    //Check latitude\r\n    if (localStorage.getItem(\"latitude\")) {\r\n      uri +=\r\n        \"&latitude=\" +\r\n        encodeURI(localStorage.getItem(\"latitude\")) +\r\n        \"&longitude=\" +\r\n        encodeURI(localStorage.getItem(\"longitude\"));\r\n    } else {\r\n      uri += \"&location=\" + encodeURI(localStorage.getItem(\"loc\"));\r\n    }\r\n    //Check price\r\n    if (localStorage.getItem(\"budget\") === \"$20\") uri += \"&price=1,2\";\r\n    else if (localStorage.getItem(\"budget\") === \"$50\") uri += \"&price=1,2,3\";\r\n    else if (localStorage.getItem(\"budget\") === \"$100\") uri += \"&price=1,2,3,4\";\r\n    else uri += \"&price=1,2,3,4\";\r\n\r\n    //Check open now\r\n    if (localStorage.getItem(\"open\") === \"yes\") uri += \"&open_now=true\";\r\n\r\n    console.log(uri);\r\n    let results;\r\n    $.ajax({\r\n      url: uri,\r\n      headers: {\r\n        Authorization: key\r\n      },\r\n      method: \"GET\",\r\n      dataType: \"json\",\r\n      success: function(array) {\r\n        results = array;\r\n        this.setState({\r\n          data: results,\r\n          total: results.length\r\n        });\r\n        if (!this.state.data.businesses.length && !this.state.updated) {\r\n          this.setState({\r\n            processed: true,\r\n            found: false,\r\n            updated: true\r\n          })\r\n        }\r\n      }.bind(this),\r\n      error: function(xhr) {\r\n        this.setState({\r\n          ajaxError: true\r\n        })\r\n      }.bind(this) \r\n    });\r\n  }\r\n\r\n  map() {\r\n    return <h1>to be map</h1>;\r\n  }\r\n\r\n  render() {\r\n    const msg = \"No results found, please complete the quiz again.\";\r\n    const error = \"Sorry Server Error! Try again later.\"\r\n    let restaurants;\r\n    let eMessage = (\r\n      <span>\r\n        <h1 className=\"text-danger error\">{msg}</h1>\r\n      </span>\r\n    );\r\n    if (this.state.ajaxError) {\r\n      restaurants = (\r\n        <span>\r\n          <h1 className=\"text-danger error\">{error}</h1>\r\n        </span>\r\n      );\r\n    }\r\n    else if (!this.state.data.businesses.length) {\r\n      restaurants = (\r\n        <span>\r\n          <h1 className=\"text-info error\">Loading...</h1>\r\n        </span>\r\n      );\r\n    }\r\n    else {\r\n      restaurants = this.state.data.businesses.map(restaurant => (\r\n        <Restaurant\r\n          key={restaurant.id}\r\n          id={restaurant.id}\r\n          rating={restaurant.rating}\r\n          phone={restaurant.display_phone}\r\n          isOpen={!restaurant.is_closed}\r\n          price={restaurant.price}\r\n          categories={restaurant.categories}\r\n          name={restaurant.name}\r\n          url={restaurant.url}\r\n          distance={restaurant.distance}\r\n          image_url={restaurant.image_url}\r\n          location={restaurant.location}\r\n        />\r\n      ));\r\n      if (this.state.processed && !this.state.found) {\r\n        eMessage = (\r\n          <span>\r\n            <h1 className=\"text-danger error\">{msg}</h1>\r\n          </span>\r\n        );\r\n      }  \r\n    }\r\n    return (\r\n      <div>\r\n        <h1 className=\"resultsTitle\">Restaurant Finder Results</h1>\r\n        {/* <Router basename={process.env.PUBLIC_URL}>\r\n          <div className=\"list_mapToggle\">\r\n            <Link to=\"/results/list\" className=\"lmbutton\">\r\n              List View\r\n            </Link>\r\n            <Link to=\"/results/map\" className=\"lbutton\">\r\n              Map View\r\n            </Link>\r\n          </div>\r\n          <Switch>\r\n            <Route exact path=\"/results/list\"> */}\r\n              <hr />\r\n              <div className=\"grid\">\r\n                {restaurants}\r\n                {this.state.processed && !this.state.found ? eMessage : ''}\r\n              </div>\r\n            {/* </Route>\r\n            <Route path=\"/results/map\">{this.map()}</Route>\r\n          </Switch>\r\n        </Router> */}\r\n        <hr />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Results;","const API_Key =\r\n      \"Bearer M42T3szZIG5AZIws_n8Y2XvvAXGZa6x77mq-kLwHs7z9U7dTpVX7_vfW7Azy8uiDKYxipXM9CePFA8m2CzsRtSEXXgHF2Sc7WiBAWu3lh5OLWkx0K3mpxli5DJ5UXnYx\";\r\nexport default API_Key","import React, { Component } from 'react';\r\n\r\nclass SelectQ extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      val: \"\"\r\n    }\r\n  }\r\n  handleChange = (e) => {\r\n    this.props.handleChange(e)\r\n    const { name, value } = e.target;\r\n    this.setState({ val: value });\r\n  }\r\n  \r\n  render() {\r\n    const options = this.props.options.map(item => (\r\n      <option value={item}>{item}</option>\r\n    ));\r\n    return (\r\n      <div className=\"input\">\r\n        <h1 className=\"question\">{this.props.question}</h1>\r\n        <select className=\"select\" name={this.props.name} value={this.state.val} onChange={this.handleChange} required>\r\n          {options}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectQ;","import React, { Component } from \"react\";\r\nimport Question from \"./Question\";\r\nimport FoodTypes from \"./FoodTypes\";\r\nimport SelectArray from \"./SelectArray\";\r\nimport Results from \"./../results/Results.jsx\";\r\nimport \"./Quiz.css\";\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport SelectQ from \"./SelectQ\";\r\n\r\nclass Quiz extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      location: false,\r\n      food: \"\",\r\n      loc: \"\",\r\n      latitude: \"\",\r\n      longitude: \"\",\r\n      commute: \"1 mile\",\r\n      casual: \"Casual\",\r\n      budget: \"$20\",\r\n      open: \"yes\",\r\n      post: \"Drinks\"\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  setSelect = () => {\r\n    localStorage.setItem(\"commute\", this.state.commute);\r\n    localStorage.setItem(\"casual\", this.state.casual);\r\n    localStorage.setItem(\"budget\", this.state.budget);\r\n    localStorage.setItem(\"open\", this.state.open);\r\n    localStorage.setItem(\"post\", this.state.open);\r\n  };\r\n\r\n  handleChange(event) {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n    localStorage.setItem(name, value);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    if (\r\n      (this.state.latitude && this.state.longitude && this.state.food) ||\r\n      (this.state.loc && this.state.food)\r\n    ) {\r\n    } else {\r\n      alert(\"Fill out quiz completely\");\r\n      return false;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    localStorage.clear();\r\n    this.setSelect();\r\n    navigator.geolocation.getCurrentPosition(\r\n      position => {\r\n        const lat = position.coords.latitude;\r\n        const lng = position.coords.longitude;\r\n        this.setState({ location: true, latitude: lat, longitude: lng });\r\n        localStorage.setItem(\"latitude\", lat);\r\n        localStorage.setItem(\"longitude\", lng);\r\n      },\r\n      error => {\r\n        console.log(\"No location given\");\r\n      }\r\n    );\r\n  }\r\n  render() {\r\n    const important =\r\n      \"Please share location to display restaurants around you.\";\r\n    const msg =\r\n      \"Following each question, input your answer into the text box below it. Once you are finished with the quiz, click the submit button at the bottom to recieve your results!\";\r\n    const food = FoodTypes.map(item => (\r\n      <Question\r\n        key={item.id}\r\n        question={item.question}\r\n        suggestions={item.answers}\r\n        handleChange={this.handleChange}\r\n      />\r\n    ));\r\n    const select = SelectArray.map(item => (\r\n      <SelectQ\r\n        key={item.id}\r\n        name={item.name}\r\n        question={item.question}\r\n        options={item.answers}\r\n        handleChange={this.handleChange}\r\n      />\r\n    ));\r\n\r\n    const noLoc = (\r\n      <div className=\"input\">\r\n        <h1 className=\"question\">What city do you live in?</h1>\r\n        <input\r\n          name=\"loc\"\r\n          type=\"text\"\r\n          placeholder=\"City, State\"\r\n          onChange={this.handleChange}\r\n          required\r\n        />\r\n      </div>\r\n    );\r\n    return (\r\n      <div>\r\n        <h1 className=\"quizTitle\">Restaurant Quiz</h1>\r\n        <div className=\"top\">\r\n          <h5>\r\n            <strong>{important}</strong>\r\n          </h5>\r\n          <p>{msg}</p>\r\n        </div>\r\n        {food}\r\n        {this.state.location ? \"\" : noLoc}\r\n        {select}\r\n        <div className=\"middle\">\r\n          {\r\n            (this.state.latitude && this.state.longitude && this.state.food) ||\r\n            (this.state.loc && this.state.food)\r\n          ? \r\n            <Link to=\"/results\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"sub submit\"\r\n              onClick={this.handleSubmit}\r\n            >\r\n              Submit\r\n            </button>\r\n          </Link>\r\n          : <Link to=\"/quiz\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"sub submit\"\r\n            onClick={this.handleSubmit}\r\n          >\r\n            Submit\r\n          </button>\r\n        </Link>}\r\n           \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Quiz;\r\n","import React, { Component } from \"react\";\r\nimport \"./Home.css\";\r\nimport Navbar from \"./Navbar\"\r\nimport Quiz from \"./../quiz/Quiz\";\r\nimport Results from \"./../results/Results\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n  render() {\r\n    const msg =\r\n      \"Going on a date, but can't find a restaurant? Our online quiz allows you and your date to find the restaurant most compatible for the two of you. Click the link below to start!\";\r\n    return (\r\n      <div>\r\n        <div className=\"img\">\r\n          <h1 className=\"title\">Date Night Helper</h1>\r\n          <p className=\"paragraph lead\">{msg}</p>\r\n          <Link to=\"/quiz\"><button className=\"submit\">Find Restaurants</button></Link>\r\n          <p style={{marginTop: \"5%\", color: \"white\"}}>Built by Aaqib Ismail and Josh Meidl</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"./../landing_page/Navbar\";\r\nimport Quiz from \"./Quiz.jsx\";\r\nimport Results from \"./../results/Results.jsx\";\r\nimport Home from \"./../landing_page/home\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nclass QuizLanding extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <div>\r\n            <Switch>\r\n              <Route path=\"/quiz\">\r\n                <Quiz />\r\n              </Route>\r\n              <Route path=\"/results\">\r\n                <Results />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuizLanding;\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"./Navbar.jsx\";\r\nimport Quiz from \"./../quiz/Quiz.jsx\";\r\nimport Results from \"./../results/Results.jsx\";\r\nimport Home from \"./home.jsx\";\r\nimport QuizLanding from \"./../quiz/quizLanding\"\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nclass Landing extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <Navbar />\r\n          <div>\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Home />\r\n              </Route>\r\n              <Route path=\"/quiz\">\r\n                <QuizLanding />\r\n              </Route>\r\n              <Route path=\"/results\">\r\n                <Results />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Landing;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport Landing from \"./components/landing_page/landing\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Landing />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}